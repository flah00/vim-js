#!/usr/bin/env python3

import zipfile
import shutil
import tempfile
import requests

from os import path


#--- Globals ----------------------------------------------
PLUGINS = """
ag.vim https://github.com/rking/ag.vim
bufexplorer https://github.com/jlanzarotta/bufexplorer
coc.nvim https://github.com/neoclide/coc.nvim
ctrlp.vim https://github.com/kien/ctrlp.vim
neomake https://github.com/neomake/neomake
nerdcommenter.git https://github.com/scrooloose/nerdcommenter.git
nerdtree.git https://github.com/scrooloose/nerdtree.git
vim-colors-solarized https://github.com/altercation/vim-colors-solarized
vim-fugitive.git https://github.com/tpope/vim-fugitive.git
vim-jsx-pretty https://github.com/MaxMEllon/vim-jsx-pretty
vim-markdown.git https://github.com/tpope/vim-markdown.git
vim-solidity https://github.com/thesis/vim-solidity
yats.vim https://github.com/HerringtonDarkholme/yats.vim
""".strip()

GITHUB_ZIP = '%s/archive/master.zip'

SOURCE_DIR = path.join(path.dirname(__file__), '../bundles')


def download_extract_replace(plugin_name, zip_path, temp_dir, source_dir):
    temp_zip_path = path.join(temp_dir, plugin_name)

    # Download and extract file in temp dir
    req = requests.get(zip_path)
    open(temp_zip_path, 'wb').write(req.content)

    zip_f = zipfile.ZipFile(temp_zip_path)
    zip_f.extractall(temp_dir)

    plugin_temp_path = path.join(temp_dir,
                                 path.join(temp_dir, '%s-master' % plugin_name))

    # Remove the current plugin and replace it with the extracted
    plugin_dest_path = path.join(source_dir, plugin_name)

    try:
        shutil.rmtree(plugin_dest_path)
    except OSError:
        pass

    shutil.move(plugin_temp_path, plugin_dest_path)

    print('Updated {0}'.format(plugin_name))


if __name__ == '__main__':
    temp_directory = tempfile.mkdtemp()

    try:
        for line in PLUGINS.splitlines():
            name, github_url = line.split(' ')
            zip_path = GITHUB_ZIP % github_url
            download_extract_replace(name, zip_path,
                                     temp_directory, SOURCE_DIR)
    finally:
        shutil.rmtree(temp_directory)
